//otra más
//prueba estúpida de bb1st

//
#include "lpf96Filter.h"

static float32_t filter_taps[LPF96FILTER_TAP_NUM] = {
  -0.01310186881126659,
  -0.01738762848826202,
  -0.011325478423923376,
  0.009807580477984853,
  0.03558790916598475,
  0.047833270482218956,
  0.035945238614444826,
  0.008562212430838285,
  -0.01160790872304283,
  -0.007851067874618943,
  0.013675355734455205,
  0.02827868248238411,
  0.01694076183509236,
  -0.012381065378594106,
  -0.0296726166162806,
  -0.012851945401360053,
  0.025514220388682125,
  0.04458847237619745,
  0.01461057748883329,
  -0.04587358285839128,
  -0.07429864960984509,
  -0.014056328606968106,
  0.13012618411046864,
  0.28262959349580447,
  0.34783614191924855,
  0.28262959349580447,
  0.13012618411046864,
  -0.014056328606968106,
  -0.07429864960984509,
  -0.04587358285839128,
  0.01461057748883329,
  0.04458847237619745,
  0.025514220388682125,
  -0.012851945401360053,
  -0.0296726166162806,
  -0.012381065378594106,
  0.01694076183509236,
  0.02827868248238411,
  0.013675355734455205,
  -0.007851067874618943,
  -0.01160790872304283,
  0.008562212430838285,
  0.035945238614444826,
  0.047833270482218956,
  0.03558790916598475,
  0.009807580477984853,
  -0.011325478423923376,
  -0.01738762848826202,
  -0.01310186881126659
};

void lpf96Filter_init(lpf96Filter* f) {
  int i;
  for(i = 0; i < LPF96FILTER_TAP_NUM; ++i)
    f->history[i] = 0;
  f->last_index = 0;
}

void lpf96Filter_put(lpf96Filter* f, float32_t input) {
  f->history[f->last_index++] = input;
  if(f->last_index == LPF96FILTER_TAP_NUM)
    f->last_index = 0;
}

float32_t lpf96Filter_get(lpf96Filter* f) {
  float32_t acc = 0;
  int index = f->last_index, i;
  for(i = 0; i < LPF96FILTER_TAP_NUM; ++i) {
    index = index != 0 ? index-1 : LPF96FILTER_TAP_NUM-1;
    acc += f->history[index] * filter_taps[i];
  };
  return acc;
}
